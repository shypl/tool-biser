@file:Suppress("SpellCheckingInspection")

package org.shypl.tool.biser

object DataPairs {
	val boolean = listOf(
		false.asBytes(0x00),
		true.asBytes(0x01)
	)
	
	val byte = listOf(
		Byte.MIN_VALUE
			.asBytes(0x80),
		(-1).toByte()
			.asBytes(0xFF),
		0.toByte()
			.asBytes(0x00),
		1.toByte()
			.asBytes(0x01),
		Byte.MAX_VALUE
			.asBytes(0x7F)
	)
	
	val int = listOf(
		Int.MIN_VALUE
			.asBytes(0xFE, 0x80, 0x00, 0x00, 0x00), // -2147483648
		(-128)
			.asBytes(0xFD, 0xFF, 0xFF, 0x81),
		(-127)
			.asBytes(0xFD, 0xFF, 0xFF, 0x82),
		(-1)
			.asBytes(0xFF),
		0
			.asBytes(0x00),
		127
			.asBytes(0x7F),
		128
			.asBytes(0x80, 0x00),
		253
			.asBytes(0x80, 0x7D),
		254
			.asBytes(0x80, 0x7E),
		255
			.asBytes(0x80, 0x7F),
		16_843_260
			.asBytes(0xE0, 0xE0, 0xC1, 0x7C),
		Int.MAX_VALUE
			.asBytes(0xFE, 0x7F, 0xFF, 0xFF, 0xFF) // 2147483647
	)
	
	val long = listOf(
		Long.MIN_VALUE
			.asBytes(0xFE, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00), // -9223372036854775808
		(-2147483648L)
			.asBytes(0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00), // -2147483648
		(-128L)
			.asBytes(0xFD, 0xFF, 0xFF, 0x81),
		(-127L)
			.asBytes(0xFD, 0xFF, 0xFF, 0x82),
		(-1L)
			.asBytes(0xFF),
		0L
			.asBytes(0x00),
		127L
			.asBytes(0x7F),
		128L
			.asBytes(0x80, 0x00),
		253L
			.asBytes(0x80, 0x7D),
		254L
			.asBytes(0x80, 0x7E),
		255L
			.asBytes(0x80, 0x7F),
		16_843_260L
			.asBytes(0xE0, 0xE0, 0xC1, 0x7C),
		2147483647L
			.asBytes(0xFE, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFF), // 2147483647
		Long.MAX_VALUE
			.asBytes(0xFE, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF) // 9223372036854775807
	)
	
	val double = listOf(
		0.0
			.asBytes(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00),
		1.0
			.asBytes(0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00),
		(-1.0)
			.asBytes(0xBF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00),
		1.5
			.asBytes(0x3F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00),
		(-1.5)
			.asBytes(0xBF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00),
		Double.MIN_VALUE
			.asBytes(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01),
		Double.MAX_VALUE
			.asBytes(0x7F, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF),
		Double.NaN
			.asBytes(0x7F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00),
		Double.NEGATIVE_INFINITY
			.asBytes(0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00),
		Double.POSITIVE_INFINITY
			.asBytes(0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
	)
	
	val booleanArray = listOf(
		booleanArrayOf()
			.asBytes(0x00),
		booleanArrayOf(false)
			.asBytes(0x01, 0x00),
		booleanArrayOf(true)
			.asBytes(0x01, 0x01),
		booleanArrayOf(true, true, true, true, false, false, false, false)
			.asBytes(0x08, 0x0F),
		booleanArrayOf(true, true, true, true, true, true, true, true)
			.asBytes(0x08, 0xFF),
		BooleanArray(17) { true }
			.asBytes(0x11, 0xFF, 0xFF, 0x01)
	)
	
	val byteArray = listOf(
		byteArrayOf()
			.asBytes(0x00),
		byte.map { it.first }.toByteArray()
			to listOf(byte.size.toByte()).plus(byte.flatMap { it.second.toList() }).toByteArray()
	)
	
	val intArray = listOf(
		intArrayOf()
			.asBytes(0x00),
		int.map { it.first }.toIntArray()
			to listOf(int.size.toByte()).plus(int.flatMap { it.second.toList() }).toByteArray()
	)
	
	val longArray = listOf(
		longArrayOf()
			.asBytes(0x00),
		long.map { it.first }.toLongArray()
			to listOf(long.size.toByte()).plus(long.flatMap { it.second.toList() }).toByteArray()
	)
	
	val doubleArray = listOf(
		doubleArrayOf()
			.asBytes(0x00),
		double.map { it.first }.toDoubleArray()
			to listOf(double.size.toByte()).plus(double.flatMap { it.second.toList() }).toByteArray()
	)
	
	val string = listOf(
		""
			.asBytes(0x00),
		"Hello World!"
			.asBytes(0x0C, 0x48, 0x65, 0x6C, 0x6C, 0x6F, 0x20, 0x57, 0x6F, 0x72, 0x6C, 0x64, 0x21),
		"00123456789\n\r\t\n\t\r\n0±!@#$%^&*()_+<>,./?{}[];\'\\:\"|00"
			.asBytes(
				0x33, 0x30, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0xA, 0xD, 0x9, 0xA, 0x9, 0xD, 0xA, 0x30, 0xC2, 0xB1, 0x21, 0x40, 0x23, 0x24, 0x25, 0x5E,
				0x26, 0x2A, 0x28, 0x29, 0x5F, 0x2B, 0x3C, 0x3E, 0x2C, 0x2E, 0x2F, 0x3F, 0x7B, 0x7D, 0x5B, 0x5D, 0x3B, 0x27, 0x5C, 0x3A, 0x22, 0x7C, 0x30, 0x30
			),
		"©"
			.asBytes(0x02, 0xC2, 0xA9),
		"ॠ"
			.asBytes(0x03, 0xE0, 0xA5, 0xA0),
		"\uD835\uDECC"
			.asBytes(0x04, 0xF0, 0x9D, 0x9B, 0x8C),
		"A pile of poo: \uD83D\uDCA9."
			.asBytes(0x14, 0x41, 0x20, 0x70, 0x69, 0x6C, 0x65, 0x20, 0x6F, 0x66, 0x20, 0x70, 0x6F, 0x6F, 0x3A, 0x20, 0xF0, 0x9F, 0x92, 0xA9, 0x2E),
		"你好世界！"
			.asBytes(0x0F, 0xE4, 0xBD, 0xA0, 0xE5, 0xA5, 0xBD, 0xE4, 0xB8, 0x96, 0xE7, 0x95, 0x8C, 0xEF, 0xBC, 0x81),
		"مرحبا العالم!"
			.asBytes(0x18, 0xD9, 0x85, 0xD8, 0xB1, 0xD8, 0xAD, 0xD8, 0xA8, 0xD8, 0xA7, 0x20, 0xD8, 0xA7, 0xD9, 0x84, 0xD8, 0xB9, 0xD8, 0xA7, 0xD9, 0x84, 0xD9, 0x85, 0x21)
	)
	
	val stringNullable = listOf<Pair<String?, ByteArray>>(
		null.asBytes(0xFF)
	)
	
	val listString = listOf(
		listOf<String>()
			.asBytes(0x00),
		listOf("A", "B")
			.asBytes(0x02, 0x01, 0x41, 0x01, 0x42)
	)
	
	val listListInt = listOf(
		listOf(listOf<Int>())
			.asBytes(0x01, 0x00),
		listOf(listOf(1, 2), listOf(3, 4))
			.asBytes(0x02, 0x02, 0x01, 0x02, 0x02, 0x03, 0x04)
	)
	
	val listIntArray = listOf(
		listOf(intArrayOf())
			.asBytes(0x01, 0x00),
		listOf(intArrayOf(1, 2), intArrayOf(3, 4))
			.asBytes(0x02, 0x02, 0x01, 0x02, 0x02, 0x03, 0x04)
	)
	
	
	val map = listOf(
		mapOf<Int, String>()
			.asBytes(0x00),
		mapOf(1 to "A", 2 to "B")
			.asBytes(0x02, 0x01, 0x01, 0x41, 0x02, 0x01, 0x42)
	)
	
	private fun <T> T.asBytes(vararg b: Int): Pair<T, ByteArray> {
		return this to bytes(*b)
	}
}